
(load "montecarlo-lock.scm")

(display "N -> N\n")
(run 1 (q) (mcculloch-produceo q q))
;(run #f (q) (fresh (x) (mcculloch-produceo `(2 3 ,x) q)))

(display "N -> N2N\n")
(run 1 (q) 
 (fresh (x) 
  (mcculloch-associateo q x) 
  (mcculloch-produceo q x)))

;(run 2 (q) (fresh (x) (mcculloch-associateo q x) (mcculloch-produceo q x)))

(display "N -> 7N\n")
(run 1 (q) 
 (mcculloch-produceo q `(7 . ,q)))

(display "3N -> N2N\n")
(run 1 (q) 
 (fresh (x) 
  (mcculloch-associateo q x) 
  (mcculloch-produceo `(3 . ,q) x)))

(display "N -> 3N23N\n")
(run 1 (q) 
 (fresh (x) 
  (mcculloch-associateo `(3 . ,q) x) 
  (mcculloch-produceo q x)))

(display "Y -> AY, for any A\n")
(run 1 (y) 
 (fresh (a) 
  (mcculloch-lawo a y)))

(display "Y -> AY2AY, for any A\n")
(run 1 (y) 
 (fresh (a x) 
  (mcculloch-associateo `(,a . ,y) x) 
  (mcculloch-produceo y x)))

(display "Y -> Y2Y 2 Y2Y\n")
(run 1 (y) 
 (fresh (doubly) 
  (mcculloch-associate-repeatedo 2 y doubly)
  (mcculloch-produceo y doubly)))

(display "X -> AX2AX 2 AX2AX, for any A\n")
(run 1 (x) 
 (fresh (a doubly) 
  (mcculloch-associate-repeatedo 2 `(,a . ,x) doubly)
  (mcculloch-produceo x doubly)))

(display "X -> 78X278X 2 78X278X, where A is 78\n")
(run 1 (x) 
 (fresh (doubly) 
  (mcculloch-associate-repeatedo 2 `(7 8 . ,x) doubly)
  (mcculloch-produceo x doubly)))

(display "3N -> 3N\n")
(run 1 (n) 
 (fresh (3n)
  (== 3n `(3 . ,n))
  (mcculloch-produceo 3n 3n)))

(display "3N -> 2N\n")
(run 1 (n) 
 (mcculloch-produceo `(3 . ,n) `(2 . ,n)))

(display "3N -> 32N\n")
(run 1 (n) 
 (mcculloch-produceo `(3 . ,n) `(3 2 . ,n)))

(display "NNN2 -> X and 3N2 -> X, for some X\n")
(run 1 (q) 
 (fresh (n x p p1 p2 p^)
  (appendo n `(2) p)
  (appendo n p p1)
  (appendo n p1 p2)
  (appendo `(3 . ,n) `(2) p^)
  (mcculloch-produceo p2 x)
  (mcculloch-produceo p^ x)
  (== q (list n x))))

(display "N2N -> NN, up to 10 results\n")
(run 10 (n) 
 (fresh (x p) 
  (mcculloch-associateo n x) 
  (appendo n n p)
  (mcculloch-produceo x p)
  ;(pairo n)
  ))

(display "NN -> N2N\n")
(run 1 (n) 
 (fresh (x p) 
  (mcculloch-associateo n x) 
  (appendo n n p)
  (mcculloch-produceo p x)))

(display "N2N -> N2N 2 N2N\n")
(run 1 (n) 
 (fresh (x doubly) 
  (mcculloch-associateo n x) 
  (mcculloch-associateo x doubly) 
  (mcculloch-produceo x doubly)))

(display "N -> N23\n")
(run 1 (n) 
 (fresh (p)
  (appendo n `(2 3) p)
  (mcculloch-produceo n p)))

(display "N -> N2, impossible\n")
(run 1 (n) 
 (fresh (p)
  (appendo n `(2) p)
  (mcculloch-produceo n p)))
